<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.goodscate.dao.GoodsCateDao">
    <!--统计父类名称-->
    <select id="countCateName" resultType="int" >
        select count(cate_name)
        from t_goods_cate
        where cate_name=#{cateName}
    </select>

    <!--新增商品分类-->
    <insert id="addGoodsCate" parameterType="com.goodscate.entity.GoodsCateInfo">
        insert into t_goods_cate
        (
         cate_code,
         cate_name,
         is_parent,
         comment,
         cate_parent_code,
         is_deleted,
         create_user,
         create_time,
         update_time,
         last_modified_by,
         version)
        values
           (#{cateCode},
            #{cateName},
            #{isParent},
            #{comment},
            #{cateParentCode},
            #{isDeleted},
            #{createBy},
            now(),
            now(),
            #{lastModifiedBy},
            0)
    </insert>

    <!--获取分类信息-->
    <select id="findCate" parameterType="com.goodscate.entity.GoodsCateMes" resultType="com.goodscate.entity.GoodsCateMes">
        select
        a.cate_name cateName,
        a.comment comment,
        a.is_deleted,
        a.create_user,
        a.create_time,
        a.update_time,
        a.last_modified_by,
        a.version
        from t_goods_cate a
        where a.cate_code = #{cateCode}
        and is_deleted = 0
    </select>

    <!--修改分类信息-->
    <update id="updateCate" parameterType="com.goodscate.entity.GoodsCateInfo">
        update t_goods_cate
        set
         cate_name = #{cateName},
         comment = #{comment},
         update_time = now(),
         last_modified_by  = #{lastModifiedBy},
         version = version + 1
         where cate_code = #{cateCode}
          and version = #{version}
    </update>

    <!--删除分类-->
    <update id="deleteCate" parameterType="com.goodscate.entity.GoodsCateInfo">
        update t_goods_cate
        set
        is_deleted = 1,
        update_time = now(),
        last_modified_by   = #{userId},
        version = version + 1
        where goods_code in
        <foreach item="goodsCode" index="index" collection="listCode" open="(" separator="," close=")">
            #{goodsCode}
        </foreach>
    </update>

    <!--查询分类列表-->
    <select id="listCate"  resultMap="ResultMap">
    select
        a.cate_code as cateCodeOne,
        a.cate_name as cateNameOne,
        b.cate_code as cateCodeTwo,
        b.cate_name as cateNameTwo
    from
        t_goods_cate a,
        t_goods_cate b
    where a.cate_code =b.cate_parent_code and a.is_deleted=0

    </select>

    <resultMap id="ResultMap" type="com.goodscate.entity.GoodsCateList">
        <id column="cateCodeOne" property="cateCode" />
        <result column="cateNameOne" property="cateName"/>
        <collection property="secondList" ofType="com.goodscate.entity.GoodsCateList">
            <id column="cateCodeTwo" property="cateCode"/>
            <result column="cateNameTwo" property="cateName"/>
        </collection>
    </resultMap>






</mapper>